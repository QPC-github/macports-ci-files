---
name: "Build & Deploy MacPorts Base for CI"

on:
  push:
    tags:
        - 'v*'

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, macos-11.0]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 64
      - name: Cleanup /usr/local
        run: |
          sudo mkdir /opt/local.old
          sudo mv /usr/local/* /opt/local.old
      - name: Fetch & Extract MacPorts Base
        run: |
          set -eu
          tag=$(basename $GITHUB_REF)
          version=$(echo $tag | colrm 1 1)
          curl -LO https://github.com/macports/macports-base/releases/download/${tag}/MacPorts-${version}.tar.bz2 \
            -O https://github.com/macports/macports-base/releases/download/${tag}/MacPorts-${version}.tar.bz2.sha256.sig
          openssl dgst -sha256 -verify jmr-pubkey.pem -signature MacPorts-${version}.tar.bz2.sha256.sig \
            MacPorts-${version}.tar.bz2
          tar -xjf MacPorts-${version}.tar.bz2
          mv MacPorts-${version} MacPorts
          rm MacPorts-${version}.tar.bz2 MacPorts-${version}.tar.bz2.sha256.sig
      - name: Configure MacPorts Base
        run: |
          set -eu
          cd MacPorts
          ./configure
      - name: Build MacPorts Base
        run: |
          set -eu
          cd MacPorts
          make -j$(sysctl -n hw.activecpu)
      - name: Install MacPorts Base
        run: |
          set -eu
          cd MacPorts
          sudo make install
      - name: Test MacPorts Base
        run: |
          set -eu
          cd MacPorts
          make test
      - name: Prepare Deployment
        run: |
          set -eu
          cd MacPorts

          sed -i "" "s/-v selfupdate/version/" portmgr/dmg/postflight
          sudo install -d -m755 /opt/local/libexec/macports/postflight
          sudo install -m755 \
            portmgr/dmg/postflight \
            /opt/local/libexec/macports/postflight/
          sudo install -m644 \
            src/*.tcl \
            /opt/local/libexec/macports/postflight/
          tar \
            --exclude '/opt/local/var/macports/sip-workaround/?*' \
            -cjf "../MacPorts.tar.bz2" \
            /opt/local
      - name: version
        run: echo "::set-output name=version::$(cat MacPorts/config/macports_version)"
        id: version
      - name: os_major
        run: echo "::set-output name=os_major::$(uname -r | cut -f 1 -d .)"
        id: os_major
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ format( 'MacPorts {0}', steps.version.outputs.version ) }}
          tag_name: ${{ github.ref }}
          body: ${{ format( 'Binaries of MacPorts {0} for CI use.', steps.version.outputs.version ) }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Deploy binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./MacPorts.tar.bz2
          asset_name: ${{ format( 'MacPorts-{0}.tar.bz2', steps.os_major.outputs.os_major ) }}
          asset_content_type: application/x-bzip2
